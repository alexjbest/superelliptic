ABOUT:

A Magma package implementing the algorithm described in "Computing
Zeta Functions of Superelliptic Curves in Larger Characteristic"
(doi:10.1007/s11786-009-0019-4). It computes the zeta function of
superelliptic curves using Monsky-Washnitzer cohomology with a
complexity quasi-linear in the square-root of the
characteristic. Here, a superelliptic curve is the unique smooth,
projective curve associated to an equation of the form y^a - h(x) = 0,
where a and the characteristic p and a and b = degree(h) are coprime
and h is squarefree. Moreover, the algorithm requires p > (aN-1)b,
where N is the chosen precision.

USAGE:

The package provides four intrinsics: "UpperCaseDD(alpha,beta,d)",
"LinearRecurrence(M,L_,R_,DDi,s)" in linearrecurrence.m and
"AbsoluteFrobeniusAction(a,h,N)", "ZetaFunction(a,h)" in
superelliptic.m. To make them avaliable in your magma shell, start
magma from the directory where the package files reside and type

  AttachSpec("superelliptic");

The following is an example of how to use LinearRecurrence. Typing

  FF := FiniteField(1031);
  FFPol<x> := PolynomialRing(FF);
  FFPolMat := MatrixRing(FFPol,2);
  M := FFPolMat![[1, x],[0, x]];
  L_ := [1,5];
  R_ := [4,8];
  s := Ilog(4,R_[#R_]);
  DD := UpperCaseDD(FF!1,2^s,2^s);
  DDi := DD^(-1);
  LinearRecurrence(M, L_, R_, DDi, s);

compute the sequence of matrices M(L_[i],R_[i]) =
M(L_[i]+1)M(L_[i]+2)...M(R_[i]). In this example, the result should be

  [
      [   1   40]
      [   0   24],

      [   1  400]
      [   0  336]
  ]

Let C be the curve defined by y^3 = x^4+1 over the field of 1031
elements. (This is a nonhyperelliptic curve of genus 3.) To compute
the absolute Frobenius action on the first rigid cohomology group
modulo 1031^2, type

  FF := FiniteField(1031);
  FFPol<x> := PolynomialRing(FF);
  a := 3;
  h := x^4+1;
  AbsoluteFrobeniusAction(a,h,2);

This should return

  [0 0 0 0 0 -210324]
  [0 0 0 0 -330058 0]
  [0 0 0 410619 0 0]
  [0 0 -525810 0 0 0]
  [0 -130937 0 0 0 0]
  [495067 0 0 0 0 0]

If you want to compute the zeta function, type

  ZetaFunction(a,h);

instead of AbsoluteFrobeniusAction(a,h,2). This gives

  (1095912791*t^6 + 3188883*t^4 + 3093*t^2 + 1)/(1031*t^2 - 1032*t + 1)
